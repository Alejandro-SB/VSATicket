// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VSATicket.Infrastructure.Data;

#nullable disable

namespace VSATicket.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VSATicket.Domain.Common.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Solution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(6381),
                            CreatedBy = "user1",
                            Description = "Description for Ticket 1",
                            OpenedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(6722),
                            Status = "Open",
                            Title = "Ticket 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 2, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7676),
                            CreatedBy = "user2",
                            Description = "Description for Ticket 2",
                            OpenedAt = new DateTime(2024, 12, 2, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7770),
                            ResolvedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7773),
                            ResolvedBy = "resolver2",
                            Solution = "Solution for Ticket 2",
                            Status = "Closed",
                            Title = "Ticket 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 1, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7777),
                            CreatedBy = "user3",
                            Description = "Description for Ticket 3",
                            OpenedAt = new DateTime(2024, 12, 1, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7777),
                            Status = "In Progress",
                            Title = "Ticket 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 11, 30, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7780),
                            CreatedBy = "user4",
                            Description = "Description for Ticket 4",
                            OpenedAt = new DateTime(2024, 11, 30, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7781),
                            Status = "Open",
                            Title = "Ticket 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 11, 29, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7783),
                            CreatedBy = "user5",
                            Description = "Description for Ticket 5",
                            OpenedAt = new DateTime(2024, 11, 29, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7784),
                            ResolvedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7785),
                            ResolvedBy = "resolver5",
                            Solution = "Solution for Ticket 5",
                            Status = "Closed",
                            Title = "Ticket 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 11, 28, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7787),
                            CreatedBy = "user6",
                            Description = "Description for Ticket 6",
                            OpenedAt = new DateTime(2024, 11, 28, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7788),
                            Status = "In Progress",
                            Title = "Ticket 6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 11, 27, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7790),
                            CreatedBy = "user7",
                            Description = "Description for Ticket 7",
                            OpenedAt = new DateTime(2024, 11, 27, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7791),
                            Status = "Open",
                            Title = "Ticket 7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 11, 26, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7793),
                            CreatedBy = "user8",
                            Description = "Description for Ticket 8",
                            OpenedAt = new DateTime(2024, 11, 26, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7793),
                            ResolvedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7794),
                            ResolvedBy = "resolver8",
                            Solution = "Solution for Ticket 8",
                            Status = "Closed",
                            Title = "Ticket 8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 11, 25, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7796),
                            CreatedBy = "user9",
                            Description = "Description for Ticket 9",
                            OpenedAt = new DateTime(2024, 11, 25, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7797),
                            Status = "In Progress",
                            Title = "Ticket 9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 11, 24, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7799),
                            CreatedBy = "user10",
                            Description = "Description for Ticket 10",
                            OpenedAt = new DateTime(2024, 11, 24, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7800),
                            Status = "Open",
                            Title = "Ticket 10"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 11, 23, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7802),
                            CreatedBy = "user11",
                            Description = "Description for Ticket 11",
                            OpenedAt = new DateTime(2024, 11, 23, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7803),
                            ResolvedAt = new DateTime(2024, 12, 3, 19, 58, 18, 176, DateTimeKind.Utc).AddTicks(7804),
                            ResolvedBy = "resolver11",
                            Solution = "Solution for Ticket 11",
                            Status = "Closed",
                            Title = "Ticket 11"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
